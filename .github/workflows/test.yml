name: Test

on:
  # Run on pushes to `master` and on all pull requests.
  push:
    branches:
      - main
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: PHP ${{ matrix.php }} with PHPCS ${{ matrix.phpcs_branch }}/WPCS ${{ matrix.wpcs_branch }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allowed_failure }}
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2', '8.3' ]
        phpcs_branch: [ '3.7.1', 'dev-master' ]
        wpcs_branch: [ '2.3.0', 'dev-master' ]
        allowed_failure: [ false ]
        exclude:
          # Only run low WPCS in combination with low PHPCS and high WPCS with high PHPCS.
          - phpcs_branch: 'dev-master'
            wpcs_branch: '2.3.0'
          - phpcs_branch: '3.7.0'
            wpcs_branch: 'dev-master'
        include:
          - php: '8.3'
            phpcs_branch: 'dev-master'
            wpcs_branch: 'dev-develop'
            allowed_failure: true

    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v2

      # On stable PHPCS versions, allow for PHP deprecation notices.
      # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
      - name: Setup ini config
        id: set_ini
        run: |
          if [[ "${{ matrix.phpcs_branch }}" != "dev-master" && "${{ matrix.wpcs_branch }}" != "dev-develop" ]]; then
            echo 'PHP_INI=error_reporting=E_ALL & ~E_DEPRECATED, display_errors=On' >> $GITHUB_OUTPUT
          else
            echo 'PHP_INI=error_reporting=-1, display_errors=On' >> $GITHUB_OUTPUT
          fi

      # Setup PHP versions, run checks
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: none
          tools: cs2pr

      - name: Set the minimum stability requirement for develop branch of WPCS
        if: ${{ matrix.wpcs_branch == 'dev-develop' }}
        run: composer config minimum-stability dev

      - name: Set the required PHPCS and WPCS versions
        env:
          PHPCS_BRANCH: ${{ matrix.phpcs_branch }}
          WPCS_BRANCH: ${{ matrix.wpcs_branch }}
        run: composer require squizlabs/php_codesniffer:${PHPCS_BRANCH} wp-coding-standards/wpcs:${WPCS_BRANCH} --no-update --no-scripts

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      # Once we'll support PHP 8 this will come in handy.
      - name: Install Composer dependencies
        if: ${{ matrix.php < 8.0 }}
        uses: ramsey/composer-install@v2

      - name: Install Composer dependencies
        if: ${{ matrix.php >= 8.0 }}
        uses: ramsey/composer-install@v2
        with:
          composer-options: --ignore-platform-reqs
          custom-cache-suffix: $(date -u "+%Y-%m")

      - name: Run the unit tests - PHP 7.4 - 8.0
        if: ${{ matrix.php < '8.1' }}
        run: composer tests:run

      - name: Run the unit tests - PHP >= 8.1
        if: ${{ matrix.php >= '8.1' }}
        run: composer tests:run -- --no-configuration --dont-report-useless-tests
